<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Colorful Card Pack Game</title>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap');
  body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(135deg, #6b73ff 0%, #000dff 100%);
    color: #fff;
    margin: 0;
    padding: 30px 15px;
    text-align: center;
  }
  h1 {
    font-size: 3rem;
    margin-bottom: 25px;
    text-shadow: 0 0 10px #00f6ff;
  }
  #coinsDisplay {
    font-size: 24px;
    font-weight: 700;
    margin-bottom: 30px;
    color: #ffd700;
    text-shadow: 0 0 10px #ffd700;
  }
  .packs-container {
    display: flex;
    justify-content: center;
    gap: 30px;
    margin-bottom: 40px;
  }
  .pack-btn {
    background: linear-gradient(145deg, #ff7a18, #af2e1d);
    border-radius: 15px;
    box-shadow: 0 4px 8px #ff4600;
    padding: 18px 35px;
    font-size: 20px;
    font-weight: 700;
    color: white;
    cursor: pointer;
    user-select: none;
    position: relative;
    width: 190px;
    transition: transform 0.2s ease, box-shadow 0.3s ease;
  }
  .pack-btn:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 15px #ff6a00;
  }
  #silverPackBtn {
    background: linear-gradient(145deg, #7777ff, #1f1fff);
    box-shadow: 0 4px 8px #3030ff;
  }
  #silverPackBtn:hover {
    box-shadow: 0 6px 15px #5050ff;
  }
  #goldPackBtn {
    background: linear-gradient(145deg, #fff05a, #f9ba0e);
    color: #4a3700;
    box-shadow: 0 4px 8px #ffcc00;
  }
  #goldPackBtn:hover {
    box-shadow: 0 6px 15px #ffdd22;
  }
  .pack-price {
    display: block;
    font-size: 15px;
    margin-top: 7px;
    font-weight: 500;
    color: #ffeeaa;
  }
  .info-icon {
    position: absolute;
    top: 10px;
    right: 12px;
    background: rgba(255,255,255,0.9);
    color: #333;
    font-weight: 900;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    line-height: 24px;
    cursor: pointer;
    font-family: monospace;
    user-select: none;
  }
  #cardArea {
    min-height: 160px;
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-bottom: 35px;
  }
  .card {
    position: relative;
    width: 220px;
    height: 140px;
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 0 15px 3px #00f6ff;
    cursor: default;
    background: #222;
  }
  .card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 16px;
  }
  .rarity-label {
    position: absolute;
    bottom: 0;
    width: 100%;
    font-weight: 700;
    font-size: 16px;
    padding: 6px 0;
    color: #fff;
    text-shadow: 0 0 4px #000;
  }

  /* Rarity colors */
  .rarity-common {
    border: 3px solid #bbb;
  }
  .rarity-uncommon {
    border: 3px solid #1eff00; /* bright green */
  }
  .rarity-rare {
    border: 3px solid #0070dd; /* blue */
  }
  .rarity-superrare {
    border: 3px solid #a335ee; /* purple */
  }
  .rarity-ultrarare {
    border: 3px solid #ff8000; /* orange */
  }
  .rarity-epic {
    border: 3px solid #e6cc80; /* gold-ish */
  }
  .rarity-legendary {
    border: 3px solid #ff0000; /* red */
  }

  /* Modal styling */
  .modal {
    display: none;
    position: fixed;
    inset: 0;
    background: rgba(0,0,0,0.88);
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }
  .modal-content {
    background: #121212;
    border-radius: 15px;
    padding: 25px 30px;
    width: 90%;
    max-width: 900px;
    max-height: 80vh;
    overflow-y: auto;
    color: white;
    box-shadow: 0 0 30px 8px #00f6ff;
    position: relative;
  }
  .close-btn {
    position: absolute;
    right: 25px;
    top: 18px;
    font-size: 30px;
    cursor: pointer;
    user-select: none;
    font-weight: 900;
    color: #00f6ff;
  }
  #collectionArea {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 15px;
    margin-top: 15px;
  }
  #sellSelectedBtn {
    margin-top: 25px;
    background: #00f6ff;
    color: #121212;
    border: none;
    font-weight: 700;
    font-size: 18px;
    padding: 12px 24px;
    border-radius: 12px;
    cursor: pointer;
    transition: background 0.3s ease;
    user-select: none;
  }
  #sellSelectedBtn:hover {
    background: #00d4cc;
  }
  .card.selected {
    outline: 4px solid #00f6ff;
    z-index: 10;
  }
  /* Buttons to view collection and all cards */
  #openCollectionBtn, #showAllCardsBtn {
    background: #00f6ff;
    color: #121212;
    border: none;
    font-weight: 700;
    font-size: 18px;
    padding: 14px 30px;
    border-radius: 12px;
    cursor: pointer;
    margin: 0 12px 40px;
    transition: background 0.3s ease;
    user-select: none;
  }
  #openCollectionBtn:hover, #showAllCardsBtn:hover {
    background: #00d4cc;
  }
  /* Tooltip */
  .tooltip {
    position: absolute;
    background: #00f6ff;
    color: #121212;
    padding: 12px 18px;
    border-radius: 12px;
    font-weight: 700;
    font-size: 14px;
    max-width: 280px;
    display: none;
    z-index: 2000;
    user-select: none;
    box-shadow: 0 0 15px #00c8ff;
  }
</style>
</head>
<body>

<h1>Colorful Card Pack Game</h1>
<div id="coinsDisplay">Coins: 0</div>

<div class="packs-container">
  <button class="pack-btn" id="bronzePackBtn">
    Bronze Pack
    <span class="pack-price">Cost: 1,000 coins</span>
    <span class="info-icon" data-pack="bronze">i</span>
  </button>
  <button class="pack-btn" id="silverPackBtn">
    Silver Pack
    <span class="pack-price">Cost: 5,000 coins</span>
    <span class="info-icon" data-pack="silver">i</span>
  </button>
  <button class="pack-btn" id="goldPackBtn">
    Gold Pack
    <span class="pack-price">Cost: 40,000 coins</span>
    <span class="info-icon" data-pack="gold">i</span>
  </button>
</div>

<div id="cardArea"></div>

<div id="packOddsTooltip" class="tooltip"></div>

<button id="openCollectionBtn">View My Collection</button>
<button id="showAllCardsBtn">View All Cards</button>

<!-- Collection Modal -->
<div id="collectionModal" class="modal">
  <div class="modal-content">
    <span class="close-btn" id="closeCollection">&times;</span>
    <h2>My Collection</h2>
    <div id="collectionArea"></div>
    <button id="sellSelectedBtn">Sell Selected Cards</button>
  </div>
</div>

<!-- All Cards Modal -->
<div id="allCardsModal" class="modal">
  <div class="modal-content">
    <span class="close-btn" id="closeAllCards">&times;</span>
    <h2>All Cards</h2>
    <div id="allCardsArea"></div>
  </div>
</div>

<script>
  // Data Setup
  const packs = {
    bronze: {
      price: 1000,
      rarities: [
        {name: "common", chance: 0.5},
        {name: "uncommon", chance: 0.3},
        {name: "rare", chance: 0.125},
        {name: "ultra rare", chance: 0.065},
        {name: "epic", chance: 0.01}
      ]
    },
    silver: {
      price: 5000,
      rarities: [
        {name: "common", chance: 0.4},
        {name: "uncommon", chance: 0.25},
        {name: "rare", chance: 0.175},
        {name: "super rare", chance: 0.1},
        {name: "ultra rare", chance: 0.05},
        {name: "epic", chance: 0.02},
        {name: "legendary", chance: 0.001}
      ]
    },
    gold: {
      price: 40000,
      rarities: [
        {name: "common", chance: 0.3},
        {name: "uncommon", chance: 0.3},
        {name: "rare", chance: 0.15},
        {name: "super rare", chance: 0.125},
        {name: "ultra rare", chance: 0.075},
        {name: "epic", chance: 0.04},
        {name: "legendary", chance: 0.01}
      ]
    }
  };

  // Cards by rarity (some sample images with placeholder images from unsplash)
  const cardsByRarity = {
    "common": [
      {name: "Nissan Skyline 1500 Van (1968)", image: "https://images.unsplash.com/photo-1502877338535-766e1452684a?auto=format&fit=crop&w=400&q=80"},
      {name: "Chevrolet EN-V 2.0", image: "https://images.unsplash.com/photo-1516116216624-53e697fedbe2?auto=format&fit=crop&w=400&q=80"}
    ],
    "uncommon": [
      {name: "Ford Mustang 1965", image: "https://images.unsplash.com/photo-1503736334956-4c8f8e92946d?auto=format&fit=crop&w=400&q=80"}
    ],
    "rare": [
      {name: "Lamborghini Aventador", image: "https://images.unsplash.com/photo-1525609004556-c46c7d6cf023?auto=format&fit=crop&w=400&q=80"}
    ],
    "super rare": [
      {name: "Ferrari F8", image: "https://images.unsplash.com/photo-1533473359331-0135ef1b58bf?auto=format&fit=crop&w=400&q=80"}
    ],
    "ultra rare": [
      {name: "Bugatti Chiron", image: "https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=400&q=80"}
    ],
    "epic": [
      {name: "Pagani Huayra", image: "https://images.unsplash.com/photo-1525609004556-0c4d3d1f2ef1?auto=format&fit=crop&w=400&q=80"}
    ],
    "legendary": [
      {name: "Koenigsegg Jesko", image: "https://images.unsplash.com/photo-1504384308090-c894fdcc538d?auto=format&fit=crop&w=400&q=80"}
    ]
  };

  let myCollection = [];
  let coins = 5000; // starting coins for demo

  // Utility: Get random rarity based on odds
  function getRandomRarity(packKey) {
    let rand = Math.random();
    let sum = 0;
    for (const rarity of packs[packKey].rarities) {
      sum += rarity.chance;
      if (rand < sum) return rarity.name;
    }
    return packs[packKey].rarities[0].name;
  }

  // Get random card by rarity
  function getRandomCard(rarity) {
    const pool = cardsByRarity[rarity];
    if (!pool || pool.length === 0) return null;
    return pool[Math.floor(Math.random() * pool.length)];
  }

  // Update coin display
  function updateCoinsDisplay() {
    document.getElementById("coinsDisplay").textContent = `Coins: ${coins.toLocaleString()}`;
  }

  // Open pack (1 card only)
  function openPack(packKey) {
    if (coins < packs[packKey].price) {
      alert("Not enough coins!");
      return;
    }
    coins -= packs[packKey].price;
    updateCoinsDisplay();

    const rarity = getRandomRarity(packKey);
    const card = getRandomCard(rarity);

    if (!card) {
      alert("No card found for this rarity!");
      return;
    }

    myCollection.push({...card, rarity});

    const cardArea = document.getElementById("cardArea");
    cardArea.innerHTML = ""; // clear old card

    const cardDiv = createCardElement(card, rarity);
    cardArea.appendChild(cardDiv);

    saveGame();
  }

  // Create card div with proper rarity class
  function createCardElement(card, rarity) {
    const div = document.createElement("div");
    div.className = "card rarity-" + rarity.replace(/\s+/g, '').toLowerCase();

    const img = document.createElement("img");
    img.src = card.image;
    img.alt = card.name;

    const label = document.createElement("div");
    label.className = "rarity-label";
    label.textContent = `${rarity.toUpperCase()} - ${card.name}`;

    div.appendChild(img);
    div.appendChild(label);

    return div;
  }

  // Show My Collection modal with sorting and 4 columns
  function showCollection() {
    const collectionArea = document.getElementById("collectionArea");
    collectionArea.innerHTML = "";

    // Sort by rarity order: legendary > epic > ultra rare > super rare > rare > uncommon > common
    const rarityOrder = ["legendary", "epic", "ultra rare", "super rare", "rare", "uncommon", "common"];
    myCollection.sort((a, b) => {
      return rarityOrder.indexOf(a.rarity) - rarityOrder.indexOf(b.rarity);
    });

    for (const card of myCollection) {
      const cardDiv = createCardElement(card, card.rarity);
      collectionArea.appendChild(cardDiv);
    }

    document.getElementById("collectionModal").style.display = "flex";
  }

  // Show All Cards modal (all cards by rarity)
  function showAllCards() {
    const allCardsArea = document.getElementById("allCardsArea");
    allCardsArea.innerHTML = "";

    for (const rarity of Object.keys(cardsByRarity)) {
      for (const card of cardsByRarity[rarity]) {
        const cardDiv = createCardElement(card, rarity);
        allCardsArea.appendChild(cardDiv);
      }
    }

    document.getElementById("allCardsModal").style.display = "flex";
  }

  // Close modal
  function closeModal(id) {
    document.getElementById(id).style.display = "none";
  }

  // Pack odds info tooltip
  const tooltip = document.getElementById("packOddsTooltip");
  const infoIcons = document.querySelectorAll(".info-icon");

  const packOddsTexts = {
    bronze: `
      <b>Bronze Pack Odds:</b><br>
      50% Common<br>
      30% Uncommon<br>
      12.5% Rare<br>
      6.5% Ultra Rare<br>
      1% Epic<br>
      <br>Cost: 1,000 coins
    `,
    silver: `
      <b>Silver Pack Odds:</b><br>
      40% Common<br>
      25% Uncommon<br>
      17.5% Rare<br>
      10% Super Rare<br>
      5% Ultra Rare<br>
      2% Epic<br>
      0.1% Legendary<br>
      <br>Cost: 5,000 coins
    `,
    gold: `
      <b>Gold Pack Odds:</b><br>
      30% Common<br>
      30% Uncommon<br>
      15% Rare<br>
      12.5% Super Rare<br>
      7.5% Ultra Rare<br>
      4% Epic<br>
      1% Legendary<br>
      <br>Cost: 40,000 coins
    `
  };

  infoIcons.forEach(icon => {
    icon.addEventListener('mouseenter', e => {
      const pack = e.target.getAttribute('data-pack');
      tooltip.innerHTML = packOddsTexts[pack];
      const rect = e.target.getBoundingClientRect();
      tooltip.style.top = (rect.bottom + window.scrollY + 10) + "px";
      tooltip.style.left = (rect.left + window.scrollX - 100) + "px";
      tooltip.style.display = "block";
    });
    icon.addEventListener('mouseleave', () => {
      tooltip.style.display = "none";
    });
  });

  // Initialize coin display
  updateCoinsDisplay();

  // Attach event handlers to pack buttons
  document.getElementById("bronzePackBtn").onclick = () => openPack("bronze");
  document.getElementById("silverPackBtn").onclick = () => openPack("silver");
  document.getElementById("goldPackBtn").onclick = () => openPack("gold");

  // Attach modal buttons
  document.getElementById("openCollectionBtn").onclick = showCollection;
  document.getElementById("showAllCardsBtn").onclick = showAllCards;
  document.getElementById("closeCollection").onclick = () => closeModal("collectionModal");
  document.getElementById("closeAllCards").onclick = () => closeModal("allCardsModal");

  // TODO: Save/load to browser storage if desired
</script>

</body>
</html>
